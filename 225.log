c1 = ( - m9 - m10 - m14 + m15 + m17)
c2 = (m8 - m9)
c3 = (m1 - m3 + m5 + m7)
c4 = (m1 + m2)
c5 = (m9 + m10 + m11 + m12 + m14)
c6 = (m9 + m10 + m11 + m12 - m13)
c7 = ( - m9 - m10 - m11 - m14 + m15)
c8 = ( - m9 - m10 - m11 - m13 - m14 + m15 + m16 - m18)
c9 = ( - m6 + m7)
c10 = (m2 + m3 + m4 - m6)

res_mul_num: [5, 2, 4, 2, 5, 5, 5, 8, 2, 4]

res_add_num: [13, 3, 9, 3, 13, 12, 13, 27, 3, 9]

Sorted indices: [7, 0, 4, 6, 5, 2, 9, 1, 3, 8]
level0:
add0: b2 + b7
add1: b3 + b4
add2: b2 + b3
add3: b5 + b7
add4: b2 + b4
add5: b7 + b10
add6: b1 + b3
add7: b2 + b5
add8: b5 + b10
add9: b1 + b2
add10: b1 + b6
add11: b3 + b4
add12: b6 + b9
add13: b8 + b9
add14: b2 + b4
add15: b3 + b8
add16: b3 + b4
add17: b1 + b4

level1:
mul0: b3 * add0
mul1: b7 * add1
mul2: add2 * add3
mul3: add4 * add5
mul4: add6 * add7
mul5: b2 * add8
mul6: b5 * add9
mul7: b3 * add10
mul8: b6 * add11
mul9: b2 * add12
mul10: b2 * add13
mul11: add14 * add15
mul12: b1 * add16
mul13: b1 * add17

biasï¼š
arr0:
[[0.12313192 0.84074554]
 [0.4630486  0.55123405]]
arr1:
[[0.67445572 0.89407716 0.74445027 0.74278849 0.43181391]
 [0.33417897 0.10581584 0.24531972 0.25025566 0.45311775]]
res:
[[0.36400651 0.19905364 0.29791706 0.3018623  0.4341268 ]
 [0.4965166  0.47233047 0.47994524 0.48189661 0.44972476]]
res_ref:
[[0.36400651 0.19905364 0.29791706 0.3018623  0.4341268 ]
 [0.4965166  0.47233047 0.47994524 0.48189661 0.44972476]]

Result: True

