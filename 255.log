c1 = ( - m6 + m7 - m12 - m13 - m15 - m16 - m18 - m19 + m20 + m21 + m22 + m23 - m24 + m28 + m30 + m31 + m33)
c2 = (m1 + m2 - m6 - m12 - m13 - m14 - m15 - m16 - m19 + m20 + m21 + m22 + m23 - m24 + m25 + m30 + m33 - m34 + m38)
c3 = ( - m2 - m3 - m4 - m5 + m7 - m8 + m9 - m29 + m32 + m39)
c4 = (m1 - m4 - m5 - m8 + m9 - m10 + m11 - m29 + m32 + m36 + m39)
c5 = (m15 + m16 + m18 + m19 + m20 - m21 + m26 + m39)
c6 = ( - m4 - m13 + m16 + m17 + m19 + m20 - m21 - m25 + m36 + m38 + m39)
c7 = (m6 + m12 + m13 - m20 - m22 + m24 - m31 + m32 + m40)
c8 = (m11 + m12 + m13 + m14 - m20 - m22 + m24 - m29 + m32 - m35 - m38)
c9 = (m9 - m21 + m23 + m24 - m27 + m28 + m33)
c10 = ( - m5 + m9 - m10 + m14 + m19 - m21 - m22 + m24 - m25 + m33 - m37)

res_mul_num: [17, 19, 10, 11, 8, 11, 9, 11, 7, 11]

res_add_num: [91, 108, 45, 51, 37, 55, 39, 53, 35, 57]

Sorted indices: [1, 0, 9, 5, 7, 3, 2, 6, 4, 8]
level0:
add0: b2 + b7
mul1: a1 * b1

level1:
mul0: b6 * add0

biasï¼š
key: (1, 5), bias: 8
key: (1, 6), bias: 21
key: (5, 6), bias: 9
arr0:
[[0.66613806 0.70778081 0.1767509  0.56893384 0.61935004]
 [0.86216101 0.92493382 0.94562733 0.36518667 0.30102872]]
arr1:
[[0.10161629 0.49474311 0.15612606 0.89887565 0.60951719]
 [0.43238962 0.58034798 0.38177539 0.84449043 0.01253492]
 [0.26287374 0.25113725 0.72598421 0.51961069 0.36323778]
 [0.36085734 0.67651486 0.76267226 0.97479647 0.18548871]
 [0.15341898 0.00296762 0.05320387 0.7902673  0.26020764]]
res:
[[0.72051473 1.1714453  0.96939505 2.33237784 0.7457876 ]
 [0.91408579 1.44876148 1.46876692 2.64130719 1.02665148]]
res_ref:
[[0.72051473 1.1714453  0.96939505 2.33237784 0.7457876 ]
 [0.91408579 1.44876148 1.46876692 2.64130719 1.02665148]]

Result: True

