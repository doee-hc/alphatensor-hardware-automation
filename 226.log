c1 = ( - m7 + m9 + m10 - m16)
c2 = (m7 + m8)
c3 = ( - m1 - m3 + m5 - m14)
c4 = (m1 - m2)
c5 = ( - m12 + m17 - m20 + m21)
c6 = ( - m12 + m15)
c7 = (m6 + m14)
c8 = (m2 + m3 + m4 - m6)
c9 = (m19 + m20)
c10 = ( - m15 + m17 - m18 + m19)
c11 = (m11 - m16)
c12 = (m8 + m9 - m11 - m13)

res_mul_num: [4, 2, 4, 2, 4, 2, 2, 4, 2, 4, 2, 4]

res_add_num: [9, 3, 9, 3, 9, 3, 3, 9, 3, 9, 3, 9]

Sorted indices: [0, 2, 4, 7, 9, 11, 1, 3, 5, 6, 8, 10]
level0:
add0: b2 + b8
add1: b3 + b4
add2: b2 + b3
add3: b4 + b8
add4: b2 + b4
add5: b8 + b10
add6: b1 + b3
add7: b2 + b4
add8: b4 + b10
add9: b1 + b7
add10: b3 + b4
add11: b1 + b4
add12: b1 + b12
add13: b2 + b4
add14: b7 + b12
add15: b6 + b12
add16: b3 + b9
add17: b1 + b3
add18: b1 + b6
add19: b1 + b2
add20: b3 + b4
add21: b1 + b2
add22: b1 + b4
add23: b3 + b11
add24: b1 + b3
add25: b3 + b5
add26: b5 + b11
add27: b1 + b2
add28: b2 + b4
add29: b9 + b11

level1:
mul0: b3 * add0
mul1: b8 * add1
mul2: add2 * add3
mul3: add4 * add5
mul4: add6 * add7
mul5: b2 * add8
mul6: b4 * add9
mul7: b1 * add10
mul8: add11 * add12
mul9: add13 * add14
mul10: b1 * add15
mul11: b4 * add16
mul12: add17 * add18
mul13: b4 * add19
mul14: b3 * add20
mul15: b12 * add21
mul16: add22 * add23
mul17: add24 * add25
mul18: b1 * add26
mul19: b11 * add27
mul20: add28 * add29

biasï¼š
arr0:
[[0.77675851 0.98359428]
 [0.84479781 0.93378318]]
arr1:
[[0.18649003 0.59026415 0.2675252  0.23220863 0.50157019 0.14363571]
 [0.674738   0.62405467 0.53540524 0.93562844 0.04248761 0.9738189 ]]
res:
[[0.80852616 1.07230931 0.73442401 1.10064881 0.43138949 1.06941296]
 [0.78760537 1.08138562 0.72595711 1.06984345 0.46339962 1.03067885]]
res_ref:
[[0.80852616 1.07230931 0.73442401 1.10064881 0.43138949 1.06941296]
 [0.78760537 1.08138562 0.72595711 1.06984345 0.46339962 1.03067885]]

Result: True

